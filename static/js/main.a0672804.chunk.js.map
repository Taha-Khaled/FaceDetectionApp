{"version":3,"sources":["components/assits/electronics.png","components/UI/NavBar.jsx","components/UI/InputFile.jsx","components/hooks/use-Detection.jsx","components/models/NewPost.jsx","components/hooks/use-algo.jsx","components/models/CheckMode.jsx","components/models/ViewDetections.jsx","App.jsx","index.js"],"names":["NavBar","props","className","src","logo","alt","style","marginRight","Checker","post","href","onClick","postClicked","mode","modeClicked","detect","detectClicked","InputFile","type","placeholder","htmlFor","onChange","getFile","id","display","useDetection","width","height","imgRef","useState","faces","setFaces","handleImage","useCallback","a","faceapi","current","detections","resized","map","d","Object","values","box","useEffect","Promise","all","tinyFaceDetector","loadFromUri","then","catch","e","console","log","NewPost","image","friends","setFriends","useRef","canvasRef","url","addFriend","event","prev","target","name","value","ref","crossOrigin","onMouseEnter","ctx","getContext","lineWidth","strokeStyle","face","strokeRect","index","left","top","useAlgo","withFaceLandmarks","withFaceExpressions","innerHtml","drawFaceLandmarks","drawDetections","drawFaceExpressions","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","error","CheckMode","ViewDetections","App","file","setFile","setImage","setChecker","img","Image","URL","createObjectURL","onload","getImage","files","ReactDOM","render","document","getElementById"],"mappings":"iRAAe,G,YAAA,IAA0B,yC,OCoC1BA,EAlCA,SAACC,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKC,EAAMC,IAAI,KACpB,sBAAMC,MAAO,CAAEC,YAAa,IAA5B,gCACA,mBACEL,UAAWD,EAAMO,QAAQC,KAAO,SAAW,GAC3CC,KAAK,cACLC,QAASV,EAAMW,YAHjB,yBAOA,mBACEV,UAAWD,EAAMO,QAAQK,KAAO,SAAW,GAC3CH,KAAK,cACLC,QAASV,EAAMa,YAHjB,0BAOA,mBACEZ,UAAWD,EAAMO,QAAQO,OAAS,SAAW,GAC7CL,KAAK,cACLC,QAASV,EAAMe,cAHjB,gCAQF,qBAAKd,UAAU,OAAf,SACE,mBAAGQ,KAAK,OAAR,wBCaOO,EA5CG,SAAChB,GACjB,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBACEC,IAAI,2GACJE,IAAI,GACJH,UAAU,WAEZ,sBAAKA,UAAU,WAAf,UACE,uBACEgB,KAAK,OACLC,YAAY,uBACZjB,UAAU,cAEZ,wBAAOkB,QAAQ,OAAf,UACE,qBACElB,UAAU,SACVC,IAAI,mFACJE,IAAI,KAEN,qBACEH,UAAU,SACVC,IAAI,oEACJE,IAAI,KAEN,qBACEH,UAAU,SACVC,IAAI,qEACJE,IAAI,KAEN,6CAEF,uBACEgB,SAAUpB,EAAMqB,QAChBC,GAAG,OACHjB,MAAO,CAAEkB,QAAS,QAClBN,KAAK,kB,uDCVFO,EAzBM,SAACC,EAAOC,EAAQC,GACnC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAcC,sBAAW,sBAAC,8BAAAC,EAAA,sEACLC,IACvBP,EAAOQ,QACP,IAAID,KAHwB,OACxBE,EADwB,OAKxBC,EAAUH,IAAsBE,EAAY,CAChDX,QACAC,WAEFI,EAASO,EAAQC,KAAI,SAACC,GAAD,OAAOC,OAAOC,OAAOF,EAAEG,SATd,2CAU7B,CAAChB,EAAQC,EAAQF,IAUpB,OARAkB,qBAAU,WAMRhB,EAAOQ,SAJLS,QAAQC,IAAI,CAACX,IAAaY,iBAAiBC,YAAY,aACpDC,KAAKjB,GACLkB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAG7B,CAACvB,EAAQI,IACLF,GCyCMwB,EAhEC,SAAC,EAAWrD,GAAW,IAApBsD,EAAmB,EAAnBA,MACjB,EAA8B1B,mBAAS,IAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KACM7B,EAAS8B,mBACTC,EAAYD,mBACVE,EAAuBL,EAAvBK,IAAKlC,EAAkB6B,EAAlB7B,MAAOC,EAAW4B,EAAX5B,OACdG,EAAQL,EAAaC,EAAOC,EAAQC,GAOpCiC,EAAY,SAACC,GACjBL,GAAW,SAACM,GAAD,mBAAC,eACPA,GADM,kBAERD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,YAItC,OACE,sBAAKhE,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAOI,MAAO,CAAEoB,QAAOC,UAAtC,UACE,qBACEwC,IAAKvC,EACLwC,YAAY,YACZjE,IAAKyD,EACLvD,IAAI,GACJqB,MAAOA,EACPC,OAAQA,IAEV,wBACE0C,aAzBM,WACZ,IAAMC,EAAMX,EAAUvB,QAAQmC,WAAW,MACzCD,EAAIE,UAAY,EAChBF,EAAIG,YAAc,SAClB3C,EAAMS,KAAI,SAACmC,GAAD,OAAUJ,EAAIK,WAAJ,MAAAL,EAAG,YAAeI,QAsBhCP,IAAKR,EACLjC,MAAOA,EACPC,OAAQA,IAETG,EAAMS,KAAI,SAACmC,EAAME,GAAP,OACT,uBACEX,KAAI,eAAUW,GACdtE,MAAO,CAAEuE,KAAMH,EAAK,GAAII,IAAKJ,EAAK,GAAKA,EAAK,GAAK,GACjDvD,YAAY,eAEZjB,UAAU,cACVmB,SAAUwC,GAFLe,SAMX,sBAAK1E,UAAU,QAAf,UACE,iDACA,uBACEgB,KAAK,OACLC,YAAY,uBACZjB,UAAU,eAEXsD,GACC,uBAAMtD,UAAU,UAAhB,kBACO,sBAAMA,UAAU,OAAhB,SAAwBuC,OAAOC,OAAOc,GAAW,SAG1D,wBAAQtD,UAAU,cAAlB,yBCvBO6E,EApCC,SAACrD,EAAOC,EAAQC,EAAQ+B,EAAW5C,GACjD,IAAMiB,EAAcC,sBAAW,sBAAC,8BAAAC,EAAA,sEACLC,IACPP,EAAOQ,QAAS,IAAID,KACnC6C,oBACAC,sBAJ2B,UACxB5C,EADwB,OAK9BsB,EAAUvB,QAAQ8C,UAAY/C,IAA8BP,EAAOQ,SACnED,IAAwBwB,EAAUvB,QAAS,CAAEV,QAAOC,WAE9CW,EAAUH,IAAsBE,EAAY,CAChDX,QACAC,YAEEZ,EAZ0B,uBAa5BoB,IAAagD,kBAAkBxB,EAAUvB,QAASE,GAbtB,0BAgB9BH,IAAaiD,eAAezB,EAAUvB,QAASE,GAC/CH,IAAakD,oBAAoB1B,EAAUvB,QAASE,GAjBtB,4CAmB7B,CAACvB,EAAQ4C,EAAWhC,EAAQC,EAAQF,IAEvCkB,qBAAU,WAWRhB,EAAOQ,SATLS,QAAQC,IAAI,CACVX,IAAaY,iBAAiBC,YAAY,WAC1Cb,IAAamD,kBAAkBtC,YAAY,WAC3Cb,IAAaoD,mBAAmBvC,YAAY,WAC5Cb,IAAaqD,kBAAkBxC,YAAY,aAE1CC,KAAKjB,GACLkB,OAAM,SAACuC,GAAD,OAAWrC,QAAQC,IAAIoC,QAGjC,CAAC7D,EAAQI,KCZC0D,EAtBG,SAAC,GAAe,IAAbnC,EAAY,EAAZA,MACb3B,EAAS8B,mBACTC,EAAYD,mBACVE,EAAuBL,EAAvBK,IAAKlC,EAAkB6B,EAAlB7B,MAAOC,EAAW4B,EAAX5B,OAEpB,OADAoD,EAAQrD,EAAOC,EAAQC,EAAQ+B,GAAW,GAExC,sBAAKzD,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAOI,MAAO,CAAEoB,QAAOC,UAAtC,UACE,qBACEwC,IAAKvC,EACLwC,YAAY,YACZjE,IAAKyD,EACLvD,IAAI,GACJqB,MAAOA,EACPC,OAAQA,IAEV,wBAAQwC,IAAKR,EAAWjC,MAAOA,EAAOC,OAAQA,OAEhD,qBAAKzB,UAAU,cCINyF,EAtBQ,SAAC,GAAe,IAAbpC,EAAY,EAAZA,MAClB3B,EAAS8B,mBACTC,EAAYD,mBACVE,EAAuBL,EAAvBK,IAAKlC,EAAkB6B,EAAlB7B,MAAOC,EAAW4B,EAAX5B,OAEpB,OADAoD,EAAQrD,EAAOC,EAAQC,EAAQ+B,GAAW,GAExC,sBAAKzD,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAOI,MAAO,CAAEoB,QAAOC,UAAtC,UACE,qBACEwC,IAAKvC,EACLwC,YAAY,YACZjE,IAAKyD,EACLvD,IAAI,GACJqB,MAAOA,EACPC,OAAQA,IAEV,wBAAQwC,IAAKR,EAAWjC,MAAOA,EAAOC,OAAQA,OAEhD,qBAAKzB,UAAU,cCoEN0F,MAjFf,WACE,MAAwB/D,qBAAxB,mBAAOgE,EAAP,KAAaC,EAAb,KACA,EAA0BjE,qBAA1B,mBAAO0B,EAAP,KAAcwC,EAAd,KACA,EAA8BlE,mBAAS,CACrCpB,MAAM,EACNI,MAAM,EACNE,QAAQ,IAHV,mBAAOP,EAAP,KAAgBwF,EAAhB,KAgBApD,qBAAU,WAmBRiD,GAlBiB,WACf,IAAII,EAAM,IAAIC,MACdD,EAAI9F,IAAMgG,IAAIC,gBAAgBP,GAE9BI,EAAII,OAAS,WACX,KAAOJ,EAAIvE,OAAS,KAAQuE,EAAItE,QAAU,KACxCsE,EAAIvE,OAAS,GACbuE,EAAItE,QAAU,GAEhBoE,EAAS,CACPnC,IAAKqC,EAAI9F,IACTuB,MAAOuE,EAAIvE,MACXC,OAAQsE,EAAItE,SAEdyB,QAAQC,IAAI4C,EAAIvE,MAAOuE,EAAItE,SAIvB2E,KACP,CAACT,IACJ,IAAMvE,EAAU,SAACwC,GACfgC,EAAQhC,EAAME,OAAOuC,MAAM,KAE7B,OACE,qCACE,cAAC,EAAD,CACE/F,QAASA,EACTI,YAtCc,WAClBoF,EAAW,CAAEvF,MAAM,EAAMI,MAAM,EAAOE,QAAQ,KAsC1CD,YApCc,WAClBkF,EAAW,CAAEvF,MAAM,EAAOI,MAAM,EAAME,QAAQ,KAoC1CC,cAlCgB,WACpBgF,EAAW,CAAEvF,MAAM,EAAOI,MAAM,EAAOE,QAAQ,OAmC5CP,EAAQC,MACP,8BACG8C,EAAQ,cAAC,EAAD,CAASA,MAAOA,IAAY,cAAC,EAAD,CAAWjC,QAASA,MAG5Dd,EAAQK,MACP,8BACG0C,EACC,cAAC,EAAD,CAAWA,MAAOA,IAElB,cAAC,EAAD,CAAWjC,QAASA,MAIzBd,EAAQO,QACP,8BACGwC,EACC,cAAC,EAAD,CAAgBA,MAAOA,IAEvB,cAAC,EAAD,CAAWjC,QAASA,MAI1B,qBAAKpB,UAAU,SAAf,SACE,2EC7ERsG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a0672804.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/electronics.cb9b030e.png\";","import \"./navbar.css\";\r\nimport logo from \"../assits/electronics.png\";\r\nconst NavBar = (props) => {\r\n  return (\r\n    <div className=\"topnav\">\r\n      <div className=\"home\">\r\n        <img src={logo} alt=\"\" />\r\n        <span style={{ marginRight: 15 }}>Face Detection App</span>\r\n        <a\r\n          className={props.Checker.post ? \"active\" : \"\"}\r\n          href=\"#CreatePost\"\r\n          onClick={props.postClicked}\r\n        >\r\n          Create Post\r\n        </a>\r\n        <a\r\n          className={props.Checker.mode ? \"active\" : \"\"}\r\n          href=\"#modeCheker\"\r\n          onClick={props.modeClicked}\r\n        >\r\n          Mode Checker\r\n        </a>\r\n        <a\r\n          className={props.Checker.detect ? \"active\" : \"\"}\r\n          href=\"#CreatePost\"\r\n          onClick={props.detectClicked}\r\n        >\r\n          Face Detections\r\n        </a>\r\n      </div>\r\n      <div className=\"back\">\r\n        <a href=\"back\">Back</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","const InputFile = (props) => {\r\n  return (\r\n    <div className=\"newPostCard\">\r\n      <div className=\"addPost\">\r\n        <img\r\n          src=\"https://images.pexels.com/photos/9371782/pexels-photo-9371782.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\r\n          alt=\"\"\r\n          className=\"avatar\"\r\n        />\r\n        <div className=\"postForm\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            className=\"postInput\"\r\n          />\r\n          <label htmlFor=\"file\">\r\n            <img\r\n              className=\"addImg\"\r\n              src=\"https://cdn.icon-icons.com/icons2/564/PNG/512/Add_Image_icon-icons.com_54218.png\"\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              className=\"addImg\"\r\n              src=\"https://icon-library.com/images/maps-icon-png/maps-icon-png-5.jpg\"\r\n              alt=\"\"\r\n            />\r\n            <img\r\n              className=\"addImg\"\r\n              src=\"https://d29fhpw069ctt2.cloudfront.net/icon/image/84451/preview.svg\"\r\n              alt=\"\"\r\n            />\r\n            <button>Send</button>\r\n          </label>\r\n          <input\r\n            onChange={props.getFile}\r\n            id=\"file\"\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default InputFile;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nconst useDetection = (width, height, imgRef) => {\r\n  const [faces, setFaces] = useState([]);\r\n\r\n  const handleImage = useCallback(async () => {\r\n    const detections = await faceapi.detectAllFaces(\r\n      imgRef.current,\r\n      new faceapi.TinyFaceDetectorOptions()\r\n    );\r\n    const resized = faceapi.resizeResults(detections, {\r\n      width,\r\n      height,\r\n    });\r\n    setFaces(resized.map((d) => Object.values(d.box)));\r\n  }, [height, imgRef, width]);\r\n\r\n  useEffect(() => {\r\n    const loadModels = () => {\r\n      Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\")])\r\n        .then(handleImage)\r\n        .catch((e) => console.log(e));\r\n    };\r\n    imgRef.current && loadModels();\r\n  }, [imgRef, handleImage]);\r\n  return faces;\r\n};\r\nexport default useDetection;\r\n","import { useRef, useState } from \"react\";\r\nimport useDetection from \"../hooks/use-Detection\";\r\nconst NewPost = ({ image }, props) => {\r\n  const [friends, setFriends] = useState([]);\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const { url, width, height } = image;\r\n  const faces = useDetection(width, height, imgRef);\r\n  const enter = () => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.lineWidth = 3;\r\n    ctx.strokeStyle = \"yellow\";\r\n    faces.map((face) => ctx.strokeRect(...face));\r\n  };\r\n  const addFriend = (event) => {\r\n    setFriends((prev) => ({\r\n      ...prev,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left\" style={{ width, height }}>\r\n        <img\r\n          ref={imgRef}\r\n          crossOrigin=\"anonymous\"\r\n          src={url}\r\n          alt=\"\"\r\n          width={width}\r\n          height={height}\r\n        />\r\n        <canvas\r\n          onMouseEnter={enter}\r\n          ref={canvasRef}\r\n          width={width}\r\n          height={height}\r\n        />\r\n        {faces.map((face, index) => (\r\n          <input\r\n            name={`input${index}`}\r\n            style={{ left: face[0], top: face[1] + face[3] + 5 }}\r\n            placeholder=\"Tag a friend\"\r\n            key={index}\r\n            className=\"friendInput\"\r\n            onChange={addFriend}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"right\">\r\n        <h1>Share your post</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          className=\"rightInput\"\r\n        />\r\n        {friends && (\r\n          <span className=\"friends\">\r\n            with <span className=\"name\">{Object.values(friends) + \" \"}</span>\r\n          </span>\r\n        )}\r\n        <button className=\"rightButton\">Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NewPost;\r\n","import { useCallback, useEffect } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\nconst useAlgo = (width, height, imgRef, canvasRef, detect) => {\r\n  const handleImage = useCallback(async () => {\r\n    const detections = await faceapi\r\n      .detectAllFaces(imgRef.current, new faceapi.TinyFaceDetectorOptions())\r\n      .withFaceLandmarks()\r\n      .withFaceExpressions();\r\n    canvasRef.current.innerHtml = faceapi.createCanvasFromMedia(imgRef.current);\r\n    faceapi.matchDimensions(canvasRef.current, { width, height });\r\n\r\n    const resized = faceapi.resizeResults(detections, {\r\n      width,\r\n      height,\r\n    });\r\n    if (detect) {\r\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\r\n      return;\r\n    }\r\n    faceapi.draw.drawDetections(canvasRef.current, resized);\r\n    faceapi.draw.drawFaceExpressions(canvasRef.current, resized);\r\n    //faceapi.draw.drawFaceExpressions(canvasRef.current, resized, 0.05);\r\n  }, [detect, canvasRef, height, imgRef, width]);\r\n\r\n  useEffect(() => {\r\n    const loadModels = () => {\r\n      Promise.all([\r\n        faceapi.nets.tinyFaceDetector.loadFromUri(\"/models\"),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(\"/models\"),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(\"/models\"),\r\n        faceapi.nets.faceExpressionNet.loadFromUri(\"/models\"),\r\n      ])\r\n        .then(handleImage)\r\n        .catch((error) => console.log(error));\r\n    };\r\n    imgRef.current && loadModels();\r\n  }, [imgRef, handleImage]);\r\n};\r\nexport default useAlgo;\r\n","import { useRef } from \"react\";\r\nimport useAlgo from \"../hooks/use-algo\";\r\nconst CheckMode = ({ image }) => {\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const { url, width, height } = image;\r\n  useAlgo(width, height, imgRef, canvasRef, false);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left\" style={{ width, height }}>\r\n        <img\r\n          ref={imgRef}\r\n          crossOrigin=\"anonymous\"\r\n          src={url}\r\n          alt=\"\"\r\n          width={width}\r\n          height={height}\r\n        />\r\n        <canvas ref={canvasRef} width={width} height={height} />\r\n      </div>\r\n      <div className=\"right\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport default CheckMode;\r\n","import { useRef } from \"react\";\r\nimport useAlgo from \"../hooks/use-algo\";\r\nconst ViewDetections = ({ image }) => {\r\n  const imgRef = useRef();\r\n  const canvasRef = useRef();\r\n  const { url, width, height } = image;\r\n  useAlgo(width, height, imgRef, canvasRef, true);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left\" style={{ width, height }}>\r\n        <img\r\n          ref={imgRef}\r\n          crossOrigin=\"anonymous\"\r\n          src={url}\r\n          alt=\"\"\r\n          width={width}\r\n          height={height}\r\n        />\r\n        <canvas ref={canvasRef} width={width} height={height} />\r\n      </div>\r\n      <div className=\"right\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport default ViewDetections;\r\n","import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport NavBar from \"./components/UI/NavBar\";\r\nimport InputFile from \"./components/UI/InputFile\";\r\nimport NewPost from \"./components/models/NewPost\";\r\nimport CheckMode from \"./components/models/CheckMode\";\r\nimport ViewDetections from \"./components/models/ViewDetections\";\r\nfunction App() {\r\n  const [file, setFile] = useState();\r\n  const [image, setImage] = useState();\r\n  const [Checker, setChecker] = useState({\r\n    post: true,\r\n    mode: false,\r\n    detect: false,\r\n  });\r\n  //const [facedetect, setFacedetect] = useState(false);\r\n  const postClicked = () => {\r\n    setChecker({ post: true, mode: false, detect: false });\r\n  };\r\n  const modeClicked = () => {\r\n    setChecker({ post: false, mode: true, detect: false });\r\n  };\r\n  const detectClicked = () => {\r\n    setChecker({ post: false, mode: false, detect: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getImage = () => {\r\n      let img = new Image();\r\n      img.src = URL.createObjectURL(file);\r\n\r\n      img.onload = () => {\r\n        while (img.width >= 1000 || img.height >= 600) {\r\n          img.width *= 0.8;\r\n          img.height *= 0.8;\r\n        }\r\n        setImage({\r\n          url: img.src,\r\n          width: img.width,\r\n          height: img.height,\r\n        });\r\n        console.log(img.width, img.height);\r\n      };\r\n    };\r\n\r\n    file && getImage();\r\n  }, [file]);\r\n  const getFile = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar\r\n        Checker={Checker}\r\n        postClicked={postClicked}\r\n        modeClicked={modeClicked}\r\n        detectClicked={detectClicked}\r\n      />\r\n      {Checker.post && (\r\n        <div>\r\n          {image ? <NewPost image={image} /> : <InputFile getFile={getFile} />}\r\n        </div>\r\n      )}\r\n      {Checker.mode && (\r\n        <div>\r\n          {image ? (\r\n            <CheckMode image={image} />\r\n          ) : (\r\n            <InputFile getFile={getFile} />\r\n          )}\r\n        </div>\r\n      )}\r\n      {Checker.detect && (\r\n        <div>\r\n          {image ? (\r\n            <ViewDetections image={image} />\r\n          ) : (\r\n            <InputFile getFile={getFile} />\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className=\"footer\">\r\n        <span>© tahakhaledabdellah@gmail.com</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}